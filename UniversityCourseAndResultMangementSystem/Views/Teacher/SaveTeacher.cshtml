@using UniversityCourseAndResultMangementSystem.Models
@model UniversityCourseAndResultMangementSystem.Models.TeacherModel

@{
    ViewBag.Title = "SaveTeacher";
    List<DesignationModel> desitnationList = ViewBag.Designation;
    List<DepartmentModel> departmentList = ViewBag.Department; 
}

<h2>Save Teacher</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        @Html.ValidationSummary(true)
        <div>
            @if (ViewBag.message != null)
            {
                <h4>@ViewBag.message</h4>
            }
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TeacherName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TeacherName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name" } })
                @Html.ValidationMessageFor(model => model.TeacherName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TeacherAdderss, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TeacherAdderss, new { htmlAttributes = new { @class = "form-control", @placeholder = "Address" } })
                @Html.ValidationMessageFor(model => model.TeacherAdderss, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TeacherEmail, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TeacherEmail, new { htmlAttributes = new { @class = "form-control", @placeholder = "E-mail" } })
                @Html.ValidationMessageFor(model => model.TeacherEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TeacherContactNo, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TeacherContactNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Contact No" } })
                @Html.ValidationMessageFor(model => model.TeacherContactNo, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-sm-2 control-label">
                <label for="TeacherDesignationId"> Department </label>
            </div>
            <div class="col-sm-10">
                <select id="TeacherDesignationId" name="TeacherDesignationId" class="form-control">
                    <option value="">----Select-----</option>
                    @foreach (var department in departmentList)
                    {
                        <option value=@department.DepartmentID>@department.Name</option>
                    }
                </select>
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.TeacherDesignationId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TeacherDesignationId, new SelectList(desitnationList, "DesignationId", "DesignationName") as IEnumerable<SelectListItem>, "Select Designation", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TeacherDesignationId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-sm-2 control-label">
                <label for="departmentId"> Department </label>
            </div>
            <div class="col-sm-10">
                <select id="departmentId" name="departmentId" class="form-control">
                    <option value="">----Select-----</option>
                    @foreach (var designation in desitnationList)
                    {
                        <option value=@designation.DesignationId>@designation.DesignationName</option>
                    }
                </select>
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.DepartmentId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.DepartmentId, new SelectList(departmentList, "DepartmentID", "Name") as IEnumerable<SelectListItem>, "Select Department")
                @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
            </div>
        </div>*@
        
        <div class="form-group">
            @Html.LabelFor(model => model.TeacherCreditToTaken, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TeacherCreditToTaken, new { htmlAttributes = new { @class = "form-control", @placeholder = "Credit" } })
                @Html.ValidationMessageFor(model => model.TeacherCreditToTaken, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
